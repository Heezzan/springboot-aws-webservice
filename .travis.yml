language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 Home
# 그레이들을 통해 의존성을 받으면 이를 해당 디렉토리에 캐시하여 같은 의존성은 다음 배포때 다시 받지 않음
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

before_install:
  - chmod +x gradlew

script: "./gradlew clean build"

# deploy 명령어가 실행 되기 전 수행. CodeDeploy는 jar 파일을 인식하지 못해서 jar+기타 설정파일을 모아 압축함
before_deploy:
#  - zip -r springboot-webservice *
#  - mkdir -p deploy
#  - mv springboot-webservice.zip deploy/springboot-webservice.zip
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동 후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/springboot-aws-webservice.zip # deploy로 zip 파일 이동

# 외부 서비스와 연동될 행위들을 선언
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings 에 설정된 값
    secret_access_key: $AWS_SECRET_KEY
    bucket: springboot-webservice--build # S3 버킷
    region: ap-northeast-2
    skip-cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리. 여기의 파일들만 S3로 전송
    wait_until_deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: springboot-webservice--build # S3 버킷
    key: springboot-aws-webservice.zip
    bundle_type: zip
    application: springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: springboot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true


# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - heehee2310@gmail.com

